version: 0.1.1
default:
  # Default profile created for data IO access.
  # Add your credentials for the source you use, and delete the rest.
  # AWS
  AWS_ACCESS_KEY_ID: "{{ env_var('AWS_ACCESS_KEY_ID') }}"
  AWS_SECRET_ACCESS_KEY: "{{ env_var('AWS_SECRET_ACCESS_KEY') }}"
  AWS_SESSION_TOKEN: session_token (Used to generate Redshift credentials)
  AWS_REGION: region
  # Azure
  AZURE_CLIENT_ID: "{{ env_var('AZURE_CLIENT_ID') }}"
  AZURE_CLIENT_SECRET: "{{ env_var('AZURE_CLIENT_SECRET') }}"
  AZURE_STORAGE_ACCOUNT_NAME: "{{ env_var('AZURE_STORAGE_ACCOUNT_NAME') }}"
  AZURE_TENANT_ID: "{{ env_var('AZURE_TENANT_ID') }}"
  # Clickhouse
  CLICKHOUSE_DATABASE: default
  CLICKHOUSE_HOST: host.docker.internal
  CLICKHOUSE_INTERFACE: http
  CLICKHOUSE_PASSWORD: null
  CLICKHOUSE_PORT: 8123
  CLICKHOUSE_USERNAME: null
  # Druid
  DRUID_HOST: hostname
  DRUID_PASSWORD: password
  DRUID_PATH: /druid/v2/sql/
  DRUID_PORT: 8082
  DRUID_SCHEME: http
  DRUID_USER: user
  # Google
  GOOGLE_SERVICE_ACC_KEY:
    type: service_account
    project_id: "clear-router-390022"
    private_key_id: "4a23ec3ae717928c2093451246bee4071507797d"
    private_key: "-----BEGIN PRIVATE KEY-----\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQDxqScayJDvfQyx\ndXO2pNkGjh6CQ+n5Hu9NXrCPb30j7V9ne5L/6E87l4H14v5L30cr1LaEdPNJOMjq\nIpTAl6l8jPPutnw9IvedXZ7szlpSyKWhck/0tH8uqOI3fl7vh/HsqVVbe7zdkD4P\nlaVj0TSMHCdiyuqK45Ox31d/vFpzxijX001xiRs1QKFD1dAVQpvWFuwd0TFzWM2N\nVgcB5mb+DIH5Ek85gZYSblK9GMi6mq3SoV08/nMAO5AQg/cQSeWDJ6T0AxzeJWZz\n6rKUQQ4ZKfVxuITyVdJTR32uxdRnxlt5xRJ/ybHgknF2EXPJOO8MtVt2MBznDjoC\nq4qvFHoVAgMBAAECggEAGQM0SjQktjkH+Y0p1SdyVBidJUgAvVl7lNM+bJYySmft\nBkG22RhzLPyVRb1BK1q4m9uIKaUOMk+3ke5S3a1E7GCNdfF64fwOy4Gva5y/Ig7k\n/9UcW/xbpplx0qMYkevM+T0cmduwlHEzzzqis/ZpHTBjzjio9oewF4rBnHXDGfTe\n85JRC4OiKyyOZoEGkKsfe4cvvdbKurcVXxeM5MLy7PH2O8mx4R7JeZRw5E5XDqzZ\nLwb1kNU21BItop+pvLcXrdQTgJ4m6xEnyv2+H49L8J8aU5dkHR49k1vYJhht+bzm\nnkaW1O4ytmyPhFiPo6PGlIyoK/eCxgrURsH98B6ZuQKBgQD6G78MboiJV28ERxZG\nqG+Lquflr7MTiP4sQ0FhD4KnJs7CeVtcZQ8l0Ajfb8befYloHjieWlJHf7LavpWZ\nul9xOdRyTBtqbINQjpD7qxKLGFgHWbeHH0SUak1kPQ7UzNWqyTRtZLdmR9vmD3BH\n6+pECYcWJ0CP91mFjye6nM/s7QKBgQD3WnbAQjNZ/X45Td+HP2qG6+C7kmTbol87\nJhk3HvUFxIHtlsHz8NSnQGifIx4tt5Wmloq+8yxZCyS3vi1WzT8s1o6xJMftkwCB\nxSz8/fq96yCZ4Qb+bY/G3Wc5cMmJGsxyQtP86qZfT6NYtcu2300hmSG7kkt3eqkn\nYptO2GbEyQKBgQDa/oCCOiaDW3Nxo2z14XYKLVNv4jBC4qjryNfuTM5x3aEc13YP\nqM1ipo2eVxkip3kxGYUp4pw4zq+kqUwElxQK6EAE9G7s+KbiWnLIajqKYH5zsTLp\ntY8vBQVOx8e8vL46FIM7ZfzQKgt5nfsKfp9Zg54s36HAbSyNrZNz6uqE4QKBgGk9\nyEDM6eRkAoyHIY/932lAewHTq633S+VytE/LkBzAGzfnaOZNlW0D7n+nBXQWJEoY\nyzerZzcLkrfK5qeD9FkzgMrGB3qBjTmplxadSU38+IYARGWEYCQQl5bM8jKvgEUt\nQdzeSaNL0wgvcVmBcOPWr4+LEyjmu4nSXpoRYMhhAoGAdr9aIASCtvO8LaNzmxEV\n235HMTUkG3qETjTYb9FPSv4UgLMGuKgh3aD+WKN36T7yGePWciEARM1foGLUKqHH\nLCQJBJxNYSEvWB2u6bEFCpNfkL8r+RgpDuEgEqZ4EmH4ITG8u6V0cBOZ7LhKfs0n\nyRa1jahiaqu5ogdoUeT8AzI=\n-----END PRIVATE KEY-----\n"
    client_email: "uber-data-project@clear-router-390022.iam.gserviceaccount.com"
    auth_uri: "https://accounts.google.com/o/oauth2/auth"
    token_uri: "https://oauth2.googleapis.com/token"
    auth_provider_x509_cert_url: "https://www.googleapis.com/oauth2/v1/certs"
    client_x509_cert_url: "https://www.googleapis.com/robot/v1/metadata/x509/uber-data-project%40clear-router-390022.iam.gserviceaccount.com"
  
  GOOGLE_SERVICE_ACC_KEY_FILEPATH: "/path/to/your/service/account/key.json"
  GOOGLE_LOCATION: US # Optional
  # MongoDB
  # Specify either the connection string or the (host, password, user, port) to connect to MongoDB.
  MONGODB_CONNECTION_STRING: "mongodb://{username}:{password}@{host}:{port}/"
  MONGODB_HOST: host
  MONGODB_PORT: 27017
  MONGODB_USER: user
  MONGODB_PASSWORD: password
  MONGODB_DATABASE: database
  MONGODB_COLLECTION: collection
  # MSSQL
  MSSQL_DATABASE: database
  MSSQL_SCHEMA: schema
  MSSQL_DRIVER: "ODBC Driver 18 for SQL Server"
  MSSQL_HOST: host
  MSSQL_PASSWORD: password
  MSSQL_PORT: 1433
  MSSQL_USER: SA
  # MySQL
  MYSQL_DATABASE: database
  MYSQL_HOST: host
  MYSQL_PASSWORD: password
  MYSQL_PORT: 3306
  MYSQL_USER: root
  # PostgresSQL
  POSTGRES_CONNECT_TIMEOUT: 10
  POSTGRES_DBNAME: postgres
  POSTGRES_SCHEMA: public # Optional
  POSTGRES_USER: username
  POSTGRES_PASSWORD: password
  POSTGRES_HOST: hostname
  POSTGRES_PORT: 5432
  # Redshift
  REDSHIFT_SCHEMA: public # Optional
  REDSHIFT_DBNAME: redshift_db_name
  REDSHIFT_HOST: redshift_cluster_id.identifier.region.redshift.amazonaws.com
  REDSHIFT_PORT: 5439
  REDSHIFT_TEMP_CRED_USER: temp_username
  REDSHIFT_TEMP_CRED_PASSWORD: temp_password
  REDSHIFT_DBUSER: redshift_db_user
  REDSHIFT_CLUSTER_ID: redshift_cluster_id
  REDSHIFT_IAM_PROFILE: default
  # Snowflake
  SNOWFLAKE_USER: username
  SNOWFLAKE_PASSWORD: password
  SNOWFLAKE_ACCOUNT: account_id.region
  SNOWFLAKE_DEFAULT_WH: null                  # Optional default warehouse
  SNOWFLAKE_DEFAULT_DB: null                  # Optional default database
  SNOWFLAKE_DEFAULT_SCHEMA: null              # Optional default schema
  SNOWFLAKE_PRIVATE_KEY_PASSPHRASE: null      # Optional private key passphrase
  SNOWFLAKE_PRIVATE_KEY_PATH: null            # Optional private key path
  SNOWFLAKE_ROLE: null                        # Optional role name
  SNOWFLAKE_TIMEOUT: null                     # Optional timeout in seconds
  # Trino
  trino:
    catalog: postgresql                       # Change this to the catalog of your choice
    host: 127.0.0.1
    http_headers:
      X-Something: 'mage=power'
    http_scheme: http
    password: mage1337                        # Optional
    port: 8080
    schema: core_data
    session_properties:                       # Optional
      acc01.optimize_locality_enabled: false
      optimize_hash_generation: true
    source: trino-cli                         # Optional
    user: admin
    verify: /path/to/your/ca.crt              # Optional
